<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.joonzis.mapper.GroupMapper">
	<insert id="createGroup" parameterType="org.joonzis.domain.GroupVO" useGeneratedKeys="true" keyProperty="groupNo">
		<selectKey keyProperty="groupNo" resultType="int" order="AFTER">
        	SELECT GROUP_SEQ.CURRVAL FROM DUAL
	    </selectKey>
		INSERT INTO "GROUP" (
			GROUP_NO, 
			MEM_NO, 
			CHAT_TITLE, 
			REG_DATE,
			MAX_MEM, 
			LIM_GENDER, 
			IS_PUBLIC,
			GROUP_MEMO,
			MIN_AGE,
			MAX_AGE
			)
		VALUES(
			GROUP_SEQ.NEXTVAL,
			#{memNo},
			#{chatTitle},
			sysdate,
			#{maxMem},
			#{limGender},
			#{isPublic, jdbcType=CHAR},
			#{groupMemo},
			#{minAge},
			#{maxAge}
		)
	</insert>
	
	<!-- 채팅방 생성 쿼리 -->
	<insert id="createChatRoom" parameterType="org.joonzis.domain.ChatRoomVO">
	    INSERT INTO GROUP_CHAT (
	    	GROUP_NO,
	    	REG_DATE
	    	)
	    VALUES (
	    	#{groupNo},
	    	sysdate
	    	)
	</insert>
	
	<!-- 채팅방 번호 가져오기 -->
	<resultMap id="groupResultMap" type="org.joonzis.domain.GroupVO">
	    <result property="groupNo" column="GROUP_NO"/>
	    <result property="chatTitle" column="CHAT_TITLE"/>
	</resultMap>

	<!-- 모임 리스트 기져오기 -->
	<select id="getAllGroups" resultType="org.joonzis.domain.GroupMemberDTO">
	    SELECT
		    g.GROUP_NO,
		    g.CHAT_TITLE,
		    g.IS_PUBLIC,
		    g.LIM_GENDER,
		    g.MIN_AGE,
		    g.MAX_AGE,
		    g.GROUP_IMG,
		    m.MEM_NO,
		    m.GROUP_USERMEMO
		FROM
		    "GROUP" g
		INNER JOIN
		    GROUP_MEM m ON g.GROUP_NO = m.GROUP_NO
		WHERE
		    m.MEM_NO=#{mem_no}
		ORDER BY 
		    g.GROUP_NO DESC
	</select>
	
	<!-- 그룹 메모 저장 -->
	<update id="updateGroupMemo">
		UPDATE GROUP_MEM
		SET
			GROUP_USERMEMO=#{group_usermemo}
		WHERE
			GROUP_NO=#{group_no}
		AND
			MEM_NO=#{mem_no}
	</update>
	
	<!-- 그룹 즐겨찾기 저장 -->
	<update id="addGroupBookmark">
		UPDATE GROUP_MEM
		SET
			GROUP_BOOKMARK='Y'
		WHERE
			GROUP_NO=#{group_no}
		AND
			MEM_NO=#{mem_no}
	</update>
	
	<!-- 그룹 즐겨찾기 해제 -->
	<update id="cancelGroupBookmark">
		UPDATE GROUP_MEM
		SET
			GROUP_BOOKMARK='N'
		WHERE
			GROUP_NO=#{group_no}
		AND
			MEM_NO=#{mem_no}
	</update>
	
	<resultMap id="groupResultRandomMap" type="org.joonzis.domain.GroupVO">
	    <result property="groupNo" column="GROUP_NO"/>
	    <result property="chatImage" column="GROUP_IMG"/>
	    <result property="chatTitle" column="CHAT_TITLE"/>
	</resultMap>
	
	<select id="getGroupNoByMember" parameterType="int" resultType="int">
	    SELECT group_no
	    FROM group_mem
	    WHERE mem_no = #{mem_no}
	    AND ROWNUM = 1
	</select>
	
	<select id="getRandomGroupList" resultType="org.joonzis.domain.GroupVO">
	    <![CDATA[
		    SELECT *
		    FROM (
		        SELECT g.*
		        FROM "GROUP" g
		        WHERE g.group_no != #{group_no}
		          AND g.group_no NOT IN (
		              SELECT gm.group_no
		              FROM group_mem gm
		              WHERE gm.mem_no = #{mem_no}
		          )
		        ORDER BY g.chat_title ASC
		    )
		    WHERE ROWNUM <= 10
	    ]]>
	</select>
	
	<select id="getRandomGroupListWithoutFilter" resultType="org.joonzis.domain.GroupVO">
	    <![CDATA[
		    SELECT *
		    FROM (
		        SELECT g.*
		        FROM "GROUP" g
		        WHERE g.group_no NOT IN (
		            SELECT gm.group_no
		            FROM group_mem gm
		            WHERE gm.mem_no = #{mem_no}
		        )
		        ORDER BY g.chat_title ASC
		    )
		    WHERE ROWNUM <= 10
	    ]]>
	</select>
	
	<select id="getgroupList" resultType="org.joonzis.domain.GroupVO">
		SELECT g.*
		FROM "GROUP" g
		WHERE g.group_no IN (
		    SELECT gm.group_no
		    FROM group_mem gm
		    WHERE gm.mem_no = #{mem_no}
		)
	</select>
	
	<delete id="removeGroup">
		DELETE GROUP_MEM WHERE GROUP_NO=#{group_no} AND MEM_NO=#{mem_no}	
	</delete>
	
	
	<!-- 모임 검색 -->
	<select id="searchGroupBygroupname" parameterType="String" resultType="org.joonzis.domain.GroupVO">
    	SELECT group_no, chat_title, group_img
    	FROM "GROUP"
    	WHERE chat_title LIKE #{keyword}
	</select>
	
	<select id="checkRequestExist" parameterType="map" resultType="int">
	    SELECT COUNT(*) 
	    FROM group_req 
	    WHERE group_no = #{group_no} AND mem_no = #{mem_no}
	</select>
	
	<insert id="insertGroupRequset" parameterType="map">
	    INSERT INTO group_req (req_no, group_no, mem_no, req_status)
	    VALUES (group_request_seq.nextval, #{group_no}, #{mem_no}, 'PENDING')
	</insert>
	
	<select id="getGroupOwnerMemNo" resultType="int">
		SELECT mem_no FROM "GROUP" WHERE group_no = #{group_no}
	</select>
	
	<select id="getGroupListByMember" resultType="org.joonzis.domain.GroupVO">
    	SELECT
		    g.GROUP_NO,
		    g.CHAT_TITLE
		    FROM 
		        "GROUP" g
		    LEFT JOIN 
		        GROUP_MEM m ON g.GROUP_NO = m.GROUP_NO
		    WHERE
		        m.MEM_NO = #{mem_no}
	</select>
	
</mapper>