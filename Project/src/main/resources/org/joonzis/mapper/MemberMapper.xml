<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.joonzis.mapper.MemberMapper">
	
	<!-- 회원가입 -->
	<insert id="insertMember">
    	INSERT INTO MEMBER (MEM_NO, MEM_ID, MEM_PW, MEM_NAME, MEM_NICK, MEM_BIRTH, MEM_DATE, MEM_IMG, MEM_EMAIL, MEM_PHONE)
    	VALUES (member_seq.NEXTVAL, #{mem_id}, #{mem_pw}, #{mem_name}, #{mem_nick}, #{mem_birth}, SYSDATE, #{mem_img, jdbcType=VARCHAR}, #{mem_email}, #{mem_phone})
	</insert>

    <select id="selectMemNoById" resultType="java.lang.Integer">
        SELECT mem_no
        FROM member
        WHERE mem_id = #{mem_id}
    </select>

    <insert id="insertFoodKate" parameterType="int">
        INSERT INTO food_kate (mem_no, food_no)
        VALUES (#{mem_no}, #{food_no})
    </insert>
	
	<!-- 아이디 찾기 -->
	<select id="findIdByNameBirthContact" resultType="java.lang.String">
		SELECT mem_id
		FROM member
		WHERE mem_name = #{mem_name}
		AND SUBSTR(mem_birth, 1, 8) = #{mem_birth}
		AND MEM_PHONE = #{mem_phone}
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="findPwByIdBirthContact" resultType="java.lang.String">
    	SELECT mem_pw
    	FROM member
    	WHERE mem_id = #{mem_id}
    	AND SUBSTR(mem_birth, 1, 8) = #{mem_birth}
    	AND MEM_PHONE = #{mem_phone}
	</select>
	
	<!-- member 정보 가져오기 -->
	<select id="getMemberInfo" resultType="org.joonzis.domain.MemberVO">
		SELECT * FROM MEMBER WHERE mem_no=#{mem_no}
	</select>
	
	<!-- member의 선호음식 가져오기 -->
	<select id="getFoodKateInfo" resultType="int">
		SELECT FOOD_NO FROM FOOD_KATE WHERE mem_no=#{mem_no}
	</select>
	
	<select id="countById" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM member
        WHERE mem_id = #{mem_id}
    </select>
	
	<!-- member 정보 수정하기 -->
	<update id="modify" parameterType="org.joonzis.domain.MemberVO">
		UPDATE MEMBER 
		SET 
			MEM_PW = #{mem_pw},
			MEM_NICK=#{mem_nick},
			MEM_EMAIL=#{mem_email},
			MEM_PHONE=#{mem_phone},
			MEM_IMG = #{mem_img, jdbcType=VARCHAR}
		WHERE
			MEM_NO=#{mem_no}
	</update>
	
	<!-- member의 이전 선호 음식 삭제 -->
	<delete id="deleteFoodKate" parameterType="int">
		DELETE FROM FOOD_KATE WHERE MEM_NO=#{mem_no}
	</delete>
	
	<!-- 로그인프로세스 -->
    <select id="loginProcess" parameterType="java.lang.String" resultType="org.joonzis.domain.MemberVO">
    	SELECT *
    	FROM member
    	WHERE mem_id = #{mem_id}
	</select>
	
	<!-- 이벤트 테이블에 정보 삽입 -->
	<insert id="insertEventInfo">
		INSERT INTO EVENT_INFO (MEM_NO)
			VALUES(event_info_seq.NEXTVAL)
	</insert>
	
	<!-- 회원탈퇴 -->
	<delete id="deleteMemberInfo" parameterType="int">
		DELETE FROM MEMBER WHERE MEM_NO = #{mem_no}
	</delete>

	<delete id="deleteReservesByMemNo" parameterType="int">
    	DELETE FROM RESERVE WHERE MEM_NO = #{mem_no}
	</delete>

	<delete id="deleteCommentsByMemNo" parameterType="int">
    	DELETE FROM "COMMENT" WHERE MEM_NO = #{mem_no}
	</delete>

	<delete id="deleteFoodKateByMemNo" parameterType="int">
    	DELETE FROM FOOD_KATE WHERE MEM_NO = #{mem_no}
	</delete>

	<delete id="deleteBookmarksByMemNo" parameterType="int">
    	DELETE FROM BOOKMARK WHERE MEM_NO = #{mem_no}
	</delete>

	<delete id="deleteFriendRequestsByMemNo" parameterType="int">
    	DELETE FROM FRIEND_REQ WHERE MEM_NO = #{mem_no} OR MEM_NO2 = #{mem_no}
	</delete>

	<delete id="deleteFriendsByMemNo" parameterType="int">
    	DELETE FROM FRIEND WHERE MEM_NO = #{mem_no} OR FRIEND_MEM_NO = #{mem_no}
	</delete>

	<delete id="deleteGroupsByMemNo" parameterType="int">
    	DELETE FROM "GROUP" WHERE MEM_NO = #{mem_no}
	</delete>
</mapper>